<Project>
  
  <ItemGroup>
    <Compile Remove="@(GplexFile->'%(OutputFile)')" />
    <Compile Include="@(GplexFile->'%(OutputFile)')">
      <Link>$(GpGenLinkDirectory)%(Filename)%(Extension).cs</Link>
      <DependentUpon>%(Identity)</DependentUpon>
      <Visible>true</Visible>
    </Compile>
  </ItemGroup>

  <!-- Run once from outer build in cross targeting projects. Imported and called from crossTargetingBuild/*.targets -->
  <Target Name="GplexToolCrossTarget" BeforeTargets="DispatchToInnerBuilds"
          Condition="'$(IsCrossTargetingBuild)' != ''"
          Inputs="@(GplexFile);@(GplexFrame);@(GppgFile)"
          Outputs="@(GplexFile->'%(OutputFile)')">
    <CallTarget Targets="GplexTool" />
  </Target>

  <!-- Run once in single targeting projects. Imported and called from build/[framework]/*.targets -->
  <!-- Don't run in VS design time builds. Otherwise VS compiles eagerly and discards the output -->
  <Target Name="GplexToolSingleTarget" BeforeTargets="CoreCompile"
          Condition="'$(DesignTimeBuild)' == '' AND '$(IsCrossTargetingBuild)' == ''"
          Inputs="@(GplexFile);@(GplexFrame);@(GppgFile)" Outputs="@(GplexFile->'%(OutputFile)')">
    <CallTarget Targets="GplexTool" />
  </Target>
  
  <Target Name="GplexTool" >
    <Exec Command="$(_GplexTool) %(GplexFile.Arguments) /out:&quot;./%(GplexFile.OutputFile)&quot; %(GplexFile.Identity)" />

    <PropertyGroup>
      <UpperArgs>$([System.String]::new('%(GplexFile.Arguments)').ToUpperInvariant())</UpperArgs>
      <HasEmbedBuff>$(UpperArgs.Contains('/EMBEDBUFF'))</HasEmbedBuff>
      <HasEmbedBuff Condition=" '$(HasEmbedBuff)' != 'true' ">$(UpperArgs.Contains('-EMBEDBUFF'))</HasEmbedBuff>
    </PropertyGroup>
  
    <!-- Ensure the generated files are included in the build. Otherwise first build fails because the source files are collected already -->
    <ItemGroup>
      <Compile Remove="GplexBuffers.cs" />
      <Compile Remove="@(GplexFile->'%(OutputFile)')" />
      <Compile Include="@(GplexFile->'%(OutputFile)')">
        <Link>$(GpGenLinkDirectory)%(Filename)%(Extension).cs</Link>
        <DependentUpon>%(Identity)</DependentUpon>
        <Visible>true</Visible>
      </Compile>
    </ItemGroup>

    <ItemGroup Condition=" '$(HasEmbedBuff)' != 'true' ">
      <Compile Include="GplexBuffers.cs" />
    </ItemGroup>

  </Target>

  <Target Name="EnsureIntermediateDirForDefaultGplexOutput" BeforeTargets="GplexTool">
    <MakeDir Directories="$(IntermediateOutputPath)"
             Condition="!Exists('$(IntermediateOutputPath)')" />
  </Target>

  <!-- Don't let IncrementalClean wipe out good output. -->
  <Target Name="SaveGplexOutputFromIncrementalClean">
    <ItemGroup>
      <FileWrites Include="@(GplexFile->'%(OutputFile)')" />
    </ItemGroup>
  </Target>

  <!-- Make it work with VS' FastUpToDateCheck -->
  <ItemGroup>
    <UpToDateCheckInput Include="@(GplexFile)" />
  </ItemGroup>

</Project>
